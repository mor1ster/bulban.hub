local CoreGui = game:GetService("CoreGui")  
local UserInput = game:GetService("UserInputService")  
local HttpService = game:GetService("HttpService")  

local Interface = import("rbxassetid://11389137937")  

if oh.Cache["ui/main"] then  
	return Interface  
end  

import("ui/controls/TabSelector")  
local MessageBox, MessageType = import("ui/controls/MessageBox")  

local RemoteSpy, ClosureSpy, ModuleScanner, UpvalueScanner, ConstantScanner  

local function safeImport(moduleName)  
    local success, module = pcall(import, moduleName)  
    if not success then  
        warn("Failed to import module: " .. moduleName .. " - " .. tostring(module))  
        return nil  
    end  
    return module  
end  

RemoteSpy = safeImport("ui/modules/RemoteSpy")  
ClosureSpy = safeImport("ui/modules/ClosureSpy")  
ModuleScanner = safeImport("ui/modules/ModuleScanner")  
UpvalueScanner = safeImport("ui/modules/UpvalueScanner")  
ConstantScanner = safeImport("ui/modules/ConstantScanner")  

-- Error handling omitted for brevity, add as necessary.  

local constants = {  
	opened = UDim2.new(0.5, -325, 0.5, -175),  
	closed = UDim2.new(0.5, -325, 0, -400),  
	reveal = UDim2.new(0.5, -15, 0, 20),  
	conceal = UDim2.new(0.5, -15, 0, -75)  
}  

local Open = Interface.Open  
local Base = Interface.Base  
local Drag = Base.Drag  
local Status = Base.Status  
local Collapse = Drag.Collapse  

function oh.setStatus(text)  
	Status.Text = '• Status: ' .. text  
end  

function oh.getStatus()  
	return Status.Text:gsub('• Status: ', '')  
end  

local dragging, dragStart, startPos  

Drag.InputBegan:Connect(function(input)  
	if input.UserInputType == Enum.UserInputType.MouseButton1 then  
		dragging = true  
		dragStart = input.Position  
		startPos = Base.Position  

		local dragEnded = input.Changed:Connect(function()  
			if input.UserInputState == Enum.UserInputState.End then  
				dragging = false  
				dragEnded:Disconnect()  
			end  
		end)  
	end  
end)  

UserInput.InputChanged:Connect(function(input)  
	if input.UserInputType == Enum.UserInputType.MouseMovement and dragging then  
		local delta = input.Position - dragStart  
		local newPos = UDim2.new(  
			startPos.X.Scale,  
			startPos.X.Offset + delta.X,  
			startPos.Y.Scale,  
			startPos.Y.Offset + delta.Y  
		)  
		Base.Position = clampPosition(newPos) -- Make sure to define clampPosition  
	end  
end)  

local isAnimating = false  

Open.MouseButton1Click:Connect(function()  
	if not isAnimating then  
		isAnimating = true  
		Open:TweenPosition(constants.conceal, "Out", "Quad", 0.15, true, function()  
			isAnimating = false   
		end)  
		Base:TweenPosition(constants.opened, "Out", "Quad", 0.15, true)  
	end  
end)  

Collapse.MouseButton1Click:Connect(function()  
	if not isAnimating then  
		isAnimating = true  
		Base:TweenPosition(constants.closed, "Out", "Quad", 0.15, true, function()  
			isAnimating = false   
		end)  
		Open:TweenPosition(constants.reveal, "Out", "Quad", 0.15, true)  
	end  
end)  

Interface.Name = HttpService:GenerateGUID(false)  
if getHui then  
	Interface.Parent = getHui()  
else  
	if syn then  
		syn.protect_gui(Interface)  
	end  

	Interface.Parent = CoreGui  
end  

return Interface
